[user]
	name = krostyslav
	email = *** @***.***
	username = krostyslav
[core]
	editor = vim
	whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
	excludesfile = ~/.gitignore
[color]
	ui = auto
[color "branch"]
	current = yellow bold
	local = green bold
	remote = cyan bold
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse
[color "status"]
	added = green bold
	changed = yellow bold
	untracked = red bold
[commit]
	template = ~/.gitmessage
[alias]
	cm = checkout master
	fm = fetch origin master:master
	mm = merge master
	rbm = git rebase master
	
	# git migrate <new-branch-name> <target-branch> <commit-range>
	migrate = "!f(){ CURRENT=$(git symbolic-ref --short HEAD); git checkout -b $1 && git branch --force $CURRENT ${3-$CURRENT@{u}} && git rebase --onto ${2-master} $CURRENT; }; f"

	# OPENING GITHUB.COM FROM THE TERMINAL	
	browse = '!open `git config remote.origin.url`'
	
	#OPENING THE BRANCH COMPARE WEB PAGE
	pr = '!f(){ URL=$(git config remote.origin.url); open ${URL%.git}/compare/$(git rev-parse --abbrev-ref HEAD); }; f'
	
	# following alias deletes all branches that have already been merged into the target branch. If no target branch is specified, then it assumes the master branch.
	bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs git branch -d; }; f"
	

	
